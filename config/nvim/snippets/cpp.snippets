# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt


#==============================================================================
snippet main
int main(int argc, char *argv[])
{
	${0}
	return 0;
}
endsnippet
#==============================================================================

#==============================================================================
snippet main(void) "simple main function"
int main()
{
	${0}
	return 0;
}
endsnippet
#==============================================================================

#==============================================================================
snippet inc
#include <${1:stdio}.h>
endsnippet
#==============================================================================


#==============================================================================
snippet inc "#include"
#include "${1:`vim_snippets#Filename("$1.h")`}"
endsnippet
#==============================================================================


#==============================================================================
snippet ifndef "#ifndef"
#ifndef $1
#define ${1/([A-Za-z0-9_]+).*/$1/} ${2:value}

#endif // $1
endsnippet
#==============================================================================

#==============================================================================
snippet if "#if"
#if ${1/([A-Za-z0-9_]+).*/$1/} 
${0:${VISUAL}}
#endif // $1
endsnippet
#==============================================================================

#==============================================================================
snippet ifdef "#ifdef"
#ifdef ${1:SYMBOL}
${0:${VISUAL}}
#endif // $1
endsnippet
#==============================================================================

#==============================================================================
snippet if
if(${1:true})
{
	${0:${VISUAL}}
}
endsnippet
#==============================================================================

#==============================================================================
snippet ife
if(${1:true})
{
	${2:${VISUAL}}
}
else
{
	${0}
}
endsnippet
#==============================================================================

#==============================================================================
snippet for
for(int ${1:i} = 0; $2 < ${2:count}; $1${3:++})
{
	${4}
}
endsnippet
#==============================================================================

#==============================================================================
snippet line
/*****************************************************************************/
$0
endsnippet
#==============================================================================

#==============================================================================
snippet headline
/* ${1:HEADLINE}
 *****************************************************************************/
$2
endsnippet
#==============================================================================

#==============================================================================
snippet fileheader "File Header"
/******************************************************************************
 * @file    `!p snip.rv = fn`
 * @author 	${2:`whoami`}
 * @date    `date +%m/%d/%y`
 *****************************************************************************/
$0
endsnippet
#==============================================================================

#==============================================================================
snippet funcheader "Function Header"
/**
 * ${1:DESCRIPTION}
 * @param ${2}
 * @return ${3}
 */
$0
#==============================================================================

